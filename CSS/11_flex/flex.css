p {
  margin: 0;
}

.container {
  display: flex;
  flex-direction: row; /* 기본값. 가로방향으로 정렬 */
  flex-direction: column; /* 세로방향으로 정렬 */
  flex-direction: row-reverse; /* 가로방향의 반대로 정렬 */

  flex-direction: row;

  flex-wrap: nowrap; /* 기본값. 줄바꿈이 일어나지 않는다. */
  flex-wrap: wrap; /* 컨테이너의 영역을 넘는 아이템을 줄바꿈 시킨다. */
  flex-wrap: wrap-reverse; /* 줄바꿈이 일어나고 반대 방향으로 배치된다. */

  flex-flow: row nowrap; /* flex-direction과 flex-wrap의 축약형. */

  width: auto;
  height: 500px;
  border: 3px solid red;
}
.box {
  /* width: 100px; */
  /* height: 100px; */
  flex-basis: 0; /* 아이템의 기본 크기를 지정 */
  flex-grow: 1;
  flex-shrink: 1;
  flex: 1; /* flex-grow : 1, flex-shrink: 1, flex-basis : auto */

  background: black;
  color: #fff;
  margin: 5px;

  /* 
    flex-basis : 0에 flex-grow 값을 똑같이 지정하면 컨텐츠의 너비에 상관이 상관없이 똑같이 공간을 나눈다 
    단, 아이템의 컨텐츠 너비가 여백을 나눠가졌을 때의 너비보다 커지면 소용없다.
  */
}

.box:nth-child(1) {
  flex: 2; /* flex-grow : 2, flex-shrink: 1, flex-basis : auto */
  /* flex-basis: 100px; */
}

.searchBox {
  display: flex;
}
.searchBox input {
  flex: 1;
}
